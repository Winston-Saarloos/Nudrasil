name: Deploy Next.js App to Harbor

on:
  push:
    branches: [main]
    paths:
      - "nudrasil-app/**"
      - ".github/workflows/deploy.yml"

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: nudrasil-app/node_modules
          key: Linux-yarn-${{ hashFiles('nudrasil-app/yarn.lock') }}
          restore-keys: Linux-yarn-

      - name: Install dependencies
        working-directory: nudrasil-app
        run: |
          if [ -d "node_modules" ]; then rm -rf node_modules; fi
          yarn install --immutable

      - name: Build application
        working-directory: nudrasil-app
        run: |
          if [ -d ".next" ]; then rm -rf .next; fi
          yarn build

      # Use the default docker-container driver (supports GHA cache)
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: false
          use: true

      - name: Debug image name
        run: |
          echo "Registry: ${{ secrets.HARBOR_REGISTRY }}"
          echo "Image name: ${{ secrets.HARBOR_IMAGE_NAME }}"
          echo "Full path: ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}"

      # Host docker login (inherits system's trusted mkcert CA)
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      # Build and LOAD into host Docker (no push)
      - name: Build image (load into Docker)
        uses: docker/build-push-action@v5
        with:
          context: nudrasil-app
          file: nudrasil-app/docker/production/Dockerfile
          load: true
          tags: ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}:main
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Push with the host docker client so TLS trust applies
      - name: Push tags via host Docker
        run: |
          BASE="${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}:main"
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r TAG; do
            [ -z "$TAG" ] && continue
            # If TAG differs from BASE, retag; then push
            if [ "$TAG" != "$BASE" ]; then
              docker tag "$BASE" "$TAG"
            fi
            docker push "$TAG"
          done

      - name: Deploy to local machine
        run: |
          # Stop existing container if running
          docker stop nudrasil-app-docker 2>/dev/null || true
          docker rm nudrasil-app-docker 2>/dev/null || true

          # Pull the latest image
          docker pull ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}:main

          docker run -d \
            --name nudrasil-app-docker \
            --restart unless-stopped \
            -p 3000:3000 \
            -e NODE_ENV=production \
            ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_IMAGE_NAME }}:main

          # Wait for container to start
          sleep 10

          # Health check
          curl -f http://localhost:3000/api/probe || exit 1

          echo "Docker container deployed successfully on port 3000"
          echo "Access your app at: http://localhost:3000"
